C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE FFT
OBJECT MODULE PLACED IN .\Hex\FFT.obj
COMPILER INVOKED BY: C:\Program Files X\Keil\C51\BIN\C51.EXE src\FFTCode\FFT.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJE
                    -CTEXTEND CODE LISTINCLUDE SYMBOLS PRINT(.\FFT.lst) PREPRINT(.\FFT.i) OBJECT(.\Hex\FFT.obj)

line level    source

   1          /******************************************************************
   2             本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3             
   4                  欢迎访问我的USB专区：http://group.ednchina.com/93/
   5                    欢迎访问我的blog：   http://www.ednchina.com/blog/computer00
   6                                         http://computer00.21ic.org
   7                                         
   8          FFT.c file
   9                                        
  10          作者：Computer-lov
  11          建立日期: 2009-03-06
  12          修改日期: 2009-03-06
  13          版本：V1.0
  14          版权所有，盗版必究。
  15          Copyright(C) Computer-lov 2009-2019
  16          All rights reserved
  17          *******************************************************************/
  18          
  19          #include "FFT.h"
   1      =1  /******************************************************************
   2      =1     本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3      =1     
   4      =1          欢迎访问我的USB专区：http://group.ednchina.com/93/
   5      =1            欢迎访问我的blog：   http://www.ednchina.com/blog/computer00
   6      =1                                 http://computer00.21ic.org
   7      =1                                 
   8      =1  FFT.h file
   9      =1                                
  10      =1  作者：Computer-lov
  11      =1  建立日期: 2009-03-06
  12      =1  修改日期: 2009-03-06
  13      =1  版本：V1.0
  14      =1  版权所有，盗版必究。
  15      =1  Copyright(C) Computer-lov 2009-2019
  16      =1  All rights reserved
  17      =1  *******************************************************************/
  18      =1  
  19      =1  #ifndef __FFT_H__
  20      =1  #define __FFT_H__
  21      =1  
  22      =1  #include <math.h>
   1      =2  /*--------------------------------------------------------------------------
   2      =2  MATH.H
   3      =2  
   4      =2  Prototypes for mathematic functions.
   5      =2  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =2  All rights reserved.
   7      =2  --------------------------------------------------------------------------*/
   8      =2  
   9      =2  #ifndef __MATH_H__
  10      =2  #define __MATH_H__
  11      =2  
  12      =2  #pragma SAVE
  13      =2  #pragma REGPARMS
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 2   

  14      =2  extern char  cabs  (char  val);
  15      =2  extern int    abs  (int   val);
  16      =2  extern long  labs  (long  val);
  17      =2  extern float fabs  (float val);
  18      =2  extern float sqrt  (float val);
  19      =2  extern float exp   (float val);
  20      =2  extern float log   (float val);
  21      =2  extern float log10 (float val);
  22      =2  extern float sin   (float val);
  23      =2  extern float cos   (float val);
  24      =2  extern float tan   (float val);
  25      =2  extern float asin  (float val);
  26      =2  extern float acos  (float val);
  27      =2  extern float atan  (float val);
  28      =2  extern float sinh  (float val);
  29      =2  extern float cosh  (float val);
  30      =2  extern float tanh  (float val);
  31      =2  extern float atan2 (float y, float x);
  32      =2  
  33      =2  extern float ceil  (float val);
  34      =2  extern float floor (float val);
  35      =2  extern float modf  (float val, float *n);
  36      =2  extern float fmod  (float x, float y);
  37      =2  extern float pow   (float x, float y);
  38      =2  
  39      =2  #pragma RESTORE
  40      =2  
  41      =2  #endif
  23      =1  
  24      =1  //定义做FFT的点数
  25      =1  #define LENGTH 128
  26      =1  //定义这么多点的FFT需要多少个二进制位
  27      =1  //bL=log2(LENGTH)
  28      =1  #define bL 9
  29      =1  
  30      =1  #define IN_TYPE  short int
  31      =1  #define OUT_TYPE long int
  32      =1  #define LEN_TYPE short int
  33      =1  
  34      =1  #define PI 3.1415926535897932384626433832795
  35      =1  
  36      =1  void InitBitRev(void);
  37      =1  void FftInput(IN_TYPE *pIn);
  38      =1  void FftExe(IN_TYPE *pIn, OUT_TYPE *pRe, OUT_TYPE *pIm);
  39      =1  void DftExe(IN_TYPE *pIn, OUT_TYPE *pRe, OUT_TYPE *pIm);
  40      =1  
  41      =1  #endif
  20          
  21          LEN_TYPE BitRev[LENGTH];  //保存位倒置的值
  22          
  23          //定义该宏将对结果进行归一化处理，否则不进行归一化处理，但是结果可能会溢出
  24          //#define UNITARY
  25          
  26          //定义该宏将使用查表法求正、余弦
  27          #define USE_TABLE
  28          
  29          //如果使用查表法求正、余弦，则定义表格
  30          #ifdef USE_TABLE
  31           #if LENGTH==32
               //计算余弦用的表，放大了1024倍（32点FFT时用）
               const short int COS_TABLE[LENGTH/2]=
               {
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 3   

                1024,1004,946,851,724,569,392,200,0,-200,
                -392,-569,-724,-851,-946
               };
               
               //计算正弦用的表，放大了1024倍（32点FFT时用）
               const short int SIN_TABLE[LENGTH/2]=
               {
                0,200,392,569,724,851,946,1004,1024,1004,
                946,851,724,569,392
               };
               #endif
  46           
  47           #if LENGTH==64
               //计算余弦用的表，放大了1024倍（64点FFT时用）
               const short int COS_TABLE[LENGTH/2]=
               {
                1024,1019,1004,980,946,903,851,792,724,650,
              
                569,483,392,297,200,100,0,-100,-200,-297,
              
                -392,-483,-569,-650,-724,-792,-851,-903,-946,-980,
              
                -1004,-1019
               };
               
               //计算正弦用的表，放大了1024倍（64点FFT时用）
               const short int SIN_TABLE[LENGTH/2]=
               {
                0,100,200,297,392,483,569,650,724,792,
              
                851,903,946,980,1004,1019,1024,1019,1004,980,
              
                946,903,851,792,724,650,569,483,392,297,
              
                200,100
               };
               #endif
  72            
  73           #if LENGTH==128
  74           //计算余弦用的表，放大了1024倍（128点FFT时用）
  75           const short int COS_TABLE[LENGTH/2]=
  76           {
  77            1024,1023,1019,1013,1004,993,980,964,946,926,
  78          
  79            903,878,851,822,792,759,724,688,650,610,
  80          
  81            569,526,483,438,392,345,297,249,200,150,
  82          
  83            100,50,0,-50,-100,-150,-200,-249,-297,-345,
  84          
  85            -392,-438,-483,-526,-569,-610,-650,-688,-724,-759,
  86          
  87            -792,-822,-851,-878,-903,-926,-946,-964,-980,-993,
  88          
  89            -1004,-1013,-1019,-1023
  90           };
  91           
  92           //计算正弦用的表，放大了1024倍（128点FFT时用）
  93           const short int SIN_TABLE[LENGTH/2]=
  94           {
  95            0,50,100,150,200,249,297,345,392,438,
  96          
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 4   

  97            483,526,569,610,650,688,724,759,792,822,
  98          
  99            851,878,903,926,946,964,980,993,1004,1013,
 100          
 101            1019,1023,1024,1023,1019,1013,1004,993,980,964,
 102          
 103            946,926,903,878,851,822,792,759,724,688,
 104          
 105            650,610,569,526,483,438,392,345,297,249,
 106          
 107            200,150,100,50
 108           };
 109           #endif
 110          
 111           #if LENGTH==256
               //计算余弦用的表，放大了1024倍（256点FFT时用）
               const short int COS_TABLE[LENGTH/2]=
               {
                1024,1024,1023,1021,1019,1016,1013,1009,1004,999,
              
                993,987,980,972,964,955,946,936,926,915,
              
                903,891,878,865,851,837,822,807,792,775,
              
                759,742,724,706,688,669,650,630,610,590,
              
                569,548,526,505,483,460,438,415,392,369,
              
                345,321,297,273,249,224,200,175,150,125,
              
                100,75,50,25,0,-25,-50,-75,-100,-125,
              
                -150,-175,-200,-224,-249,-273,-297,-321,-345,-369,
              
                -392,-415,-438,-460,-483,-505,-526,-548,-569,-590,
              
                -610,-630,-650,-669,-688,-706,-724,-742,-759,-775,
              
                -792,-807,-822,-837,-851,-865,-878,-891,-903,-915,
              
                -926,-936,-946,-955,-964,-972,-980,-987,-993,-999,
              
                -1004,-1009,-1013,-1016,-1019,-1021,-1023,-1024
               };
               
               //计算正弦用的表，放大了1024倍（256点FFT时用）
               const short int SIN_TABLE[LENGTH/2]=
               {
                0,25,50,75,100,125,150,175,200,224,
              
                249,273,297,321,345,369,392,415,438,460,
              
                483,505,526,548,569,590,610,630,650,669,
              
                688,706,724,742,759,775,792,807,822,837,
              
                851,865,878,891,903,915,926,936,946,955,
              
                964,972,980,987,993,999,1004,1009,1013,1016,
              
                1019,1021,1023,1024,1024,1024,1023,1021,1019,1016,
              
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 5   

                1013,1009,1004,999,993,987,980,972,964,955,
              
                946,936,926,915,903,891,878,865,851,837,
              
                822,807,792,775,759,742,724,706,688,669,
              
                650,630,610,590,569,548,526,505,483,460,
              
                438,415,392,369,345,321,297,273,249,224,
              
                200,175,150,125,100,75,50,25
               };
               #endif
 172           
 173           #if LENGTH==512
               //计算余弦用的表，放大了1024倍（512点FFT时用）
               const short int COS_TABLE[LENGTH/2]=
               {
                1024,1024,1024,1023,1023,1022,1021,1020,1019,1018,
              
                1016,1015,1013,1011,1009,1007,1004,1002,999,996,
              
                993,990,987,983,980,976,972,968,964,960,
              
                955,951,946,941,936,931,926,920,915,909,
              
                903,897,891,885,878,872,865,858,851,844,
              
                837,830,822,815,807,799,792,784,775,767,
              
                759,750,742,733,724,715,706,697,688,678,
              
                669,659,650,640,630,620,610,600,590,579,
              
                569,558,548,537,526,516,505,494,483,472,
              
                460,449,438,426,415,403,392,380,369,357,
              
                345,333,321,309,297,285,273,261,249,237,
              
                224,212,200,187,175,163,150,138,125,113,
              
                100,88,75,63,50,38,25,13,0,-13,
              
                -25,-38,-50,-63,-75,-88,-100,-113,-125,-138,
              
                -150,-163,-175,-187,-200,-212,-224,-237,-249,-261,
              
                -273,-285,-297,-309,-321,-333,-345,-357,-369,-380,
              
                -392,-403,-415,-426,-438,-449,-460,-472,-483,-494,
              
                -505,-516,-526,-537,-548,-558,-569,-579,-590,-600,
              
                -610,-620,-630,-640,-650,-659,-669,-678,-688,-697,
              
                -706,-715,-724,-733,-742,-750,-759,-767,-775,-784,
              
                -792,-799,-807,-815,-822,-830,-837,-844,-851,-858,
              
                -865,-872,-878,-885,-891,-897,-903,-909,-915,-920,
              
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 6   

                -926,-931,-936,-941,-946,-951,-955,-960,-964,-968,
              
                -972,-976,-980,-983,-987,-990,-993,-996,-999,-1002,
              
                -1004,-1007,-1009,-1011,-1013,-1015,-1016,-1018,-1019,-1020,
              
                -1021,-1022,-1023,-1023,-1024,-1024
               };
               
               //计算正弦用的表，放大了1024倍（512点FFT时用）
               const short int SIN_TABLE[LENGTH/2]=
               {
                0,13,25,38,50,63,75,88,100,113,
              
                125,138,150,163,175,187,200,212,224,237,
              
                249,261,273,285,297,309,321,333,345,357,
              
                369,380,392,403,415,426,438,449,460,472,
              
                483,494,505,516,526,537,548,558,569,579,
              
                590,600,610,620,630,640,650,659,669,678,
              
                688,697,706,715,724,733,742,750,759,767,
              
                775,784,792,799,807,815,822,830,837,844,
              
                851,858,865,872,878,885,891,897,903,909,
              
                915,920,926,931,936,941,946,951,955,960,
              
                964,968,972,976,980,983,987,990,993,996,
              
                999,1002,1004,1007,1009,1011,1013,1015,1016,1018,
              
                1019,1020,1021,1022,1023,1023,1024,1024,1024,1024,
              
                1024,1023,1023,1022,1021,1020,1019,1018,1016,1015,
              
                1013,1011,1009,1007,1004,1002,999,996,993,990,
              
                987,983,980,976,972,968,964,960,955,951,
              
                946,941,936,931,926,920,915,909,903,897,
              
                891,885,878,872,865,858,851,844,837,830,
              
                822,815,807,799,792,784,775,767,759,750,
              
                742,733,724,715,706,697,688,678,669,659,
              
                650,640,630,620,610,600,590,579,569,558,
              
                548,537,526,516,505,494,483,472,460,449,
              
                438,426,415,403,392,380,369,357,345,333,
              
                321,309,297,285,273,261,249,237,224,212,
              
                200,187,175,163,150,138,125,113,100,88,
              
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 7   

                75,63,50,38,25,13
               };
               #endif
 286           
 287           #if LENGTH==1024
               //计算余弦用的表，放大了1024倍（1024点FFT时用）
               const short int COS_TABLE[LENGTH/2]=
               {
                1024,1024,1024,1024,1024,1024,1023,1023,1023,1022,
              
                1022,1022,1021,1021,1020,1020,1019,1018,1018,1017,
              
                1016,1016,1015,1014,1013,1012,1011,1010,1009,1008,
              
                1007,1006,1004,1003,1002,1000,999,998,996,995,
              
                993,992,990,989,987,985,983,982,980,978,
              
                976,974,972,970,968,966,964,962,960,958,
              
                955,953,951,948,946,944,941,939,936,934,
              
                931,928,926,923,920,917,915,912,909,906,
              
                903,900,897,894,891,888,885,882,878,875,
              
                872,868,865,862,858,855,851,848,844,841,
              
                837,834,830,826,822,819,815,811,807,803,
              
                799,796,792,788,784,779,775,771,767,763,
              
                759,755,750,746,742,737,733,729,724,720,
              
                715,711,706,702,697,692,688,683,678,674,
              
                669,664,659,654,650,645,640,635,630,625,
              
                620,615,610,605,600,595,590,584,579,574,
              
                569,564,558,553,548,543,537,532,526,521,
              
                516,510,505,499,494,488,483,477,472,466,
              
                460,455,449,443,438,432,426,421,415,409,
              
                403,398,392,386,380,374,369,363,357,351,
              
                345,339,333,327,321,315,309,303,297,291,
              
                285,279,273,267,261,255,249,243,237,230,
              
                224,218,212,206,200,194,187,181,175,169,
              
                163,156,150,144,138,132,125,119,113,107,
              
                100,94,88,82,75,69,63,57,50,44,
              
                38,31,25,19,13,6,0,-6,-13,-19,
              
                -25,-31,-38,-44,-50,-57,-63,-69,-75,-82,
              
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 8   

                -88,-94,-100,-107,-113,-119,-125,-132,-138,-144,
              
                -150,-156,-163,-169,-175,-181,-187,-194,-200,-206,
              
                -212,-218,-224,-230,-237,-243,-249,-255,-261,-267,
              
                -273,-279,-285,-291,-297,-303,-309,-315,-321,-327,
              
                -333,-339,-345,-351,-357,-363,-369,-374,-380,-386,
              
                -392,-398,-403,-409,-415,-421,-426,-432,-438,-443,
              
                -449,-455,-460,-466,-472,-477,-483,-488,-494,-499,
              
                -505,-510,-516,-521,-526,-532,-537,-543,-548,-553,
              
                -558,-564,-569,-574,-579,-584,-590,-595,-600,-605,
              
                -610,-615,-620,-625,-630,-635,-640,-645,-650,-654,
              
                -659,-664,-669,-674,-678,-683,-688,-692,-697,-702,
              
                -706,-711,-715,-720,-724,-729,-733,-737,-742,-746,
              
                -750,-755,-759,-763,-767,-771,-775,-779,-784,-788,
              
                -792,-796,-799,-803,-807,-811,-815,-819,-822,-826,
              
                -830,-834,-837,-841,-844,-848,-851,-855,-858,-862,
              
                -865,-868,-872,-875,-878,-882,-885,-888,-891,-894,
              
                -897,-900,-903,-906,-909,-912,-915,-917,-920,-923,
              
                -926,-928,-931,-934,-936,-939,-941,-944,-946,-948,
              
                -951,-953,-955,-958,-960,-962,-964,-966,-968,-970,
              
                -972,-974,-976,-978,-980,-982,-983,-985,-987,-989,
              
                -990,-992,-993,-995,-996,-998,-999,-1000,-1002,-1003,
              
                -1004,-1006,-1007,-1008,-1009,-1010,-1011,-1012,-1013,-1014,
              
                -1015,-1016,-1016,-1017,-1018,-1018,-1019,-1020,-1020,-1021,
              
                -1021,-1022,-1022,-1022,-1023,-1023,-1023,-1024,-1024,-1024,
              
                -1024,-1024
               };
               
               //计算正弦用的表，放大了1024倍（1024点FFT时用）
               const short int SIN_TABLE[LENGTH/2]=
               {
                0,6,13,19,25,31,38,44,50,57,
              
                63,69,75,82,88,94,100,107,113,119,
              
                125,132,138,144,150,156,163,169,175,181,
              
                187,194,200,206,212,218,224,230,237,243,
              
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 9   

                249,255,261,267,273,279,285,291,297,303,
              
                309,315,321,327,333,339,345,351,357,363,
              
                369,374,380,386,392,398,403,409,415,421,
              
                426,432,438,443,449,455,460,466,472,477,
              
                483,488,494,499,505,510,516,521,526,532,
              
                537,543,548,553,558,564,569,574,579,584,
              
                590,595,600,605,610,615,620,625,630,635,
              
                640,645,650,654,659,664,669,674,678,683,
              
                688,692,697,702,706,711,715,720,724,729,
              
                733,737,742,746,750,755,759,763,767,771,
              
                775,779,784,788,792,796,799,803,807,811,
              
                815,819,822,826,830,834,837,841,844,848,
              
                851,855,858,862,865,868,872,875,878,882,
              
                885,888,891,894,897,900,903,906,909,912,
              
                915,917,920,923,926,928,931,934,936,939,
              
                941,944,946,948,951,953,955,958,960,962,
              
                964,966,968,970,972,974,976,978,980,982,
              
                983,985,987,989,990,992,993,995,996,998,
              
                999,1000,1002,1003,1004,1006,1007,1008,1009,1010,
              
                1011,1012,1013,1014,1015,1016,1016,1017,1018,1018,
              
                1019,1020,1020,1021,1021,1022,1022,1022,1023,1023,
              
                1023,1024,1024,1024,1024,1024,1024,1024,1024,1024,
              
                1024,1024,1023,1023,1023,1022,1022,1022,1021,1021,
              
                1020,1020,1019,1018,1018,1017,1016,1016,1015,1014,
              
                1013,1012,1011,1010,1009,1008,1007,1006,1004,1003,
              
                1002,1000,999,998,996,995,993,992,990,989,
              
                987,985,983,982,980,978,976,974,972,970,
              
                968,966,964,962,960,958,955,953,951,948,
              
                946,944,941,939,936,934,931,928,926,923,
              
                920,917,915,912,909,906,903,900,897,894,
              
                891,888,885,882,878,875,872,868,865,862,
              
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 10  

                858,855,851,848,844,841,837,834,830,826,
              
                822,819,815,811,807,803,799,796,792,788,
              
                784,779,775,771,767,763,759,755,750,746,
              
                742,737,733,729,724,720,715,711,706,702,
              
                697,692,688,683,678,674,669,664,659,654,
              
                650,645,640,635,630,625,620,615,610,605,
              
                600,595,590,584,579,574,569,564,558,553,
              
                548,543,537,532,526,521,516,510,505,499,
              
                494,488,483,477,472,466,460,455,449,443,
              
                438,432,426,421,415,409,403,398,392,386,
              
                380,374,369,363,357,351,345,339,333,327,
              
                321,315,309,303,297,291,285,279,273,267,
              
                261,255,249,243,237,230,224,218,212,206,
              
                200,194,187,181,175,169,163,156,150,144,
              
                138,132,125,119,113,107,100,94,88,82,
              
                75,69,63,57,50,44,38,31,25,19,
              
                13,6
               };
               #endif 
 504          #endif
 505          
 506          /********************************************************************
 507          函数功能：对指定长度的二进制数求对应的位倒置值。
 508          入口参数：N：要求倒序的值。L：bit数。
 509          返    回：N的位倒置值。
 510          备    注：无。
 511          ********************************************************************/
 512          LEN_TYPE DoBitRev(LEN_TYPE N, LEN_TYPE L)
 513          {
 514   1       LEN_TYPE Temp1,Temp2;
 515   1       LEN_TYPE i;
 516   1       for(i=0;i<L/2;i++)
 517   1       {
 518   2        Temp1=0;
 519   2        Temp2=0;
 520   2        if(N&(1<<i))
 521   2         Temp1=1;
 522   2        if(N&(1<<(L-1-i)))
 523   2         Temp2=1;
 524   2        N&=~(1<<i);
 525   2        N&=~(1<<(L-1-i));
 526   2        N|=(Temp2<<i);
 527   2        N|=(Temp1<<(L-1-i));
 528   2       }
 529   1       return N;
 530   1      }
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 11  

 531          /////////////////////////End of function/////////////////////////////
 532          
 533          /********************************************************************
 534          函数功能：初始化位倒置值数组，供FFT运算时查表用。
 535          入口参数：无。
 536          返    回：无。
 537          备    注：结果保存在全局变量BitRev数组中。
 538          ********************************************************************/
 539          void InitBitRev(void)
 540          {
 541   1       LEN_TYPE i;
 542   1       for(i=0;i<LENGTH;i++) //求位反转
 543   1       {
 544   2        BitRev[i]=DoBitRev(i,bL);
 545   2       }
 546   1      }
 547          /////////////////////////End of function/////////////////////////////
 548          
 549          /********************************************************************
 550          函数功能：对输入数据进行倒序处理。
 551          入口参数：pIn：要处理的数据缓冲区地址。
 552          返    回：无。
 553          备    注：在调用FftExe之前应该调用该函数对数据进行倒序处理。
 554          ********************************************************************/
 555          void FftInput(IN_TYPE *pIn)
 556          {
 557   1       LEN_TYPE i;
 558   1       IN_TYPE Temp;
 559   1       for(i=0;i<LENGTH;i++)
 560   1       {
 561   2        if(BitRev[i]>i)  //如果倒位序比原序大，则交换
 562   2        {
 563   3         Temp=pIn[i];
 564   3         pIn[i]=pIn[BitRev[i]];
 565   3         pIn[BitRev[i]]=Temp;
 566   3        }
 567   2       }
 568   1      }
 569          /////////////////////////End of function/////////////////////////////
 570          
 571          /********************************************************************
 572          函数功能：进行FFT运算。
 573          入口参数：pIn：输入数据的缓冲区；pRe：保存实部的缓冲区；pIm：保存虚部的缓冲区。
 574          返    回：无。
 575          备    注：在调用该函数之前应该调用FftInput函数对数据进行倒序处理。
 576          ********************************************************************/
 577          void FftExe(IN_TYPE *pIn, OUT_TYPE *pRe, OUT_TYPE *pIm)
 578          {
 579   1       LEN_TYPE i,j;
 580   1       LEN_TYPE BlockSize;
 581   1       OUT_TYPE tr,ti;
 582   1       LEN_TYPE OffSet1,OffSet2;
 583   1      
 584   1      #ifdef USE_TABLE
 585   1       LEN_TYPE OffSet0;
 586   1      #endif
 587   1      
 588   1       long c,s;
 589   1       
 590   1       //先计算2点的
 591   1       for(j=0;j<LENGTH;j+=2)
 592   1       {
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 12  

 593   2        tr=pIn[j+1];
 594   2        pRe[j+1]=(pIn[j]-tr);
 595   2        pIm[j+1]=0;
 596   2        pRe[j]=(pIn[j]+tr);
 597   2        pIm[j]=0;
 598   2       }
 599   1      
 600   1       for(BlockSize=4;BlockSize<=LENGTH;BlockSize<<=1) //再一层层计算
 601   1       {
 602   2        for(j=0;j<LENGTH;j+=BlockSize)
 603   2        {
 604   3         for(i=0;i<BlockSize/2;i++)
 605   3         {
 606   4          #ifndef USE_TABLE
                  c=(long)(1024*cos(2*PI*i/BlockSize));
                  s=(long)(1024*sin(2*PI*i/BlockSize));
                  #else
 610   4          OffSet0=LENGTH/BlockSize*i;
 611   4          c=COS_TABLE[OffSet0];
 612   4          s=SIN_TABLE[OffSet0];
 613   4          #endif
 614   4          
 615   4          OffSet1=i+j;
 616   4          OffSet2=OffSet1+BlockSize/2;
 617   4          tr=(OUT_TYPE)((c*pRe[OffSet2]+s*pIm[OffSet2])/1024);
 618   4          ti=(OUT_TYPE)((c*pIm[OffSet2]-s*pRe[OffSet2])/1024);
 619   4          #ifdef UNITARY  //如果要对结果归一化处理，则每次运算要除以2
                  pRe[OffSet2]=(pRe[OffSet1]-tr)/2;
                  pIm[OffSet2]=(pIm[OffSet1]-ti)/2;
                  pRe[OffSet1]=(pRe[OffSet1]+tr)/2;
                  pIm[OffSet1]=(pIm[OffSet1]+ti)/2;
                  #else
 625   4          pRe[OffSet2]=(pRe[OffSet1]-tr);
 626   4          pIm[OffSet2]=(pIm[OffSet1]-ti);
 627   4          pRe[OffSet1]=(pRe[OffSet1]+tr);
 628   4          pIm[OffSet1]=(pIm[OffSet1]+ti);
 629   4          #endif
 630   4         }
 631   3        }
 632   2       }
 633   1      #ifdef UNITARY
               pRe[0]/=2;
               pIm[0]/=2;
              #endif
 637   1      }
 638          /////////////////////////End of function/////////////////////////////
 639          
 640          /********************************************************************
 641          函数功能：计算DFT。
 642          入口参数：pIn：输入数据的缓冲区；pRe：保存实部的缓冲区；pIm：保存虚部的缓冲区。
 643          返    回：无。
 644          备    注：无。
 645          ********************************************************************/
 646          void DftExe(IN_TYPE *pIn, OUT_TYPE *pRe, OUT_TYPE *pIm)
 647          {
 648   1       LEN_TYPE i,j;
 649   1       OUT_TYPE tRe,tIm;
 650   1       for(i=0;i<LENGTH;i++)
 651   1       {
 652   2        tRe=0;
 653   2        tIm=0;
 654   2        for(j=0;j<LENGTH;j++)
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 13  

 655   2        {
 656   3         tRe+=(OUT_TYPE)(pIn[j]*cos(2*PI*i*j/LENGTH));
 657   3         tIm+=(OUT_TYPE)(0-pIn[j]*sin(2*PI*i*j/LENGTH));
 658   3        }
 659   2       #ifdef UNITARY
                if(i==0)
                {
                 pRe[i]=tRe/LENGTH;
                 pIm[i]=tIm/LENGTH;
                }
                else
                {
                 pRe[i]=tRe/(LENGTH/2);
                 pIm[i]=tIm/(LENGTH/2);
                }
               #else
 671   2         pRe[i]=tRe;
 672   2         pIm[i]=tIm;
 673   2       #endif
 674   2       }
 675   1      }
 676          /////////////////////////End of function/////////////////////////////
 677          
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 14  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0049 (BEGIN)
0000         L?0074:
0000         L?0075:
0000 900000      R     MOV     DPTR,#pRe
0003         L?0076:
0003 FF                MOV     R7,A
0004         L?0077:
0004 E0                MOVX    A,@DPTR
0005 FB                MOV     R3,A
0006 A3                INC     DPTR
0007 E0                MOVX    A,@DPTR
0008 FA                MOV     R2,A
0009 A3                INC     DPTR
000A E0                MOVX    A,@DPTR
000B F9                MOV     R1,A
000C 8F82              MOV     DPL,R7
000E 8E83              MOV     DPH,R6
0010 22                RET     
0011         L?0078:
0011 120000      E     LCALL   ?C?ILDOPTR
0014 FF                MOV     R7,A
0015 AEF0              MOV     R6,B
0017 EE                MOV     A,R6
0018 33                RLC     A
0019 95E0              SUBB    A,ACC
001B FD                MOV     R5,A
001C FC                MOV     R4,A
001D         L?0079:
001D 900000      R     MOV     DPTR,#tr
0020         L?0080:
0020 E0                MOVX    A,@DPTR
0021 F8                MOV     R0,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FA                MOV     R2,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A 22                RET     
002B         L?0081:
002B         L?0082:
002B 900000      R     MOV     DPTR,#OffSet2
002E         L?0083:
002E E0                MOVX    A,@DPTR
002F FE                MOV     R6,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 7802              MOV     R0,#02H
0034 22                RET     
0035         L?0084:
0035 EB                MOV     A,R3
0036         L?0085:
0036 2F                ADD     A,R7
0037 FF                MOV     R7,A
0038 EA                MOV     A,R2
0039 3E                ADDC    A,R6
003A FE                MOV     R6,A
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 15  

003B E9                MOV     A,R1
003C 3D                ADDC    A,R5
003D FD                MOV     R5,A
003E E8                MOV     A,R0
003F 3C                ADDC    A,R4
0040 FC                MOV     R4,A
0041 22                RET     
0042         L?0086:
0042         L?0087:
0042 FB                MOV     R3,A
0043         L?0088:
0043 C3                CLR     C
0044 EF                MOV     A,R7
0045 9B                SUBB    A,R3
0046 FF                MOV     R7,A
0047 EE                MOV     A,R6
0048 9A                SUBB    A,R2
0049 FE                MOV     R6,A
004A ED                MOV     A,R5
004B 99                SUBB    A,R1
004C FD                MOV     R5,A
004D EC                MOV     A,R4
004E 98                SUBB    A,R0
004F FC                MOV     R4,A
0050 22                RET     
0051         L?0089:
0051 C3                CLR     C
0052 900000      R     MOV     DPTR,#j+01H
0055 E0                MOVX    A,@DPTR
0056 900000      R     MOV     DPTR,#j
0059         L?0090:
0059 9480              SUBB    A,#080H
005B E0                MOVX    A,@DPTR
005C 6480              XRL     A,#080H
005E 9480              SUBB    A,#080H
0060 22                RET     
0061         L?0091:
0061 33                RLC     A
0062 FE                MOV     R6,A
0063         L?0092:
0063 7400        R     MOV     A,#LOW BitRev
0065 2F                ADD     A,R7
0066 F582              MOV     DPL,A
0068 7400        R     MOV     A,#HIGH BitRev
006A 3E                ADDC    A,R6
006B F583              MOV     DPH,A
006D 22                RET     
006E         L?0093:
006E 900000      R     MOV     DPTR,#BlockSize
0071         L?0094:
0071 E0                MOVX    A,@DPTR
0072 FE                MOV     R6,A
0073 A3                INC     DPTR
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
0076 7C00              MOV     R4,#00H
0078 7D02              MOV     R5,#02H
007A 020000      E     LJMP    ?C?SIDIV
007D         L?0095:
007D 900000      R     MOV     DPTR,#i
0080         L?0096:
0080 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 16  

0081 FC                MOV     R4,A
0082 A3                INC     DPTR
0083 E0                MOVX    A,@DPTR
0084 FD                MOV     R5,A
0085 EC                MOV     A,R4
0086 020000      E     LJMP    ?C?FCASTI
0089         L?0097:
0089 900000      R     MOV     DPTR,#i+01H
008C E0                MOVX    A,@DPTR
008D 900000      R     MOV     DPTR,#i
0090         L?0098:
0090 25E0              ADD     A,ACC
0092 FF                MOV     R7,A
0093 E0                MOVX    A,@DPTR
0094 33                RLC     A
0095 FE                MOV     R6,A
0096 22                RET     
0097         L?0099:
0097 EE                MOV     A,R6
0098 33                RLC     A
0099 95E0              SUBB    A,ACC
009B FD                MOV     R5,A
009C FC                MOV     R4,A
009D 020000      E     LJMP    ?C?LSTXDATA
00A0         L?0100:
00A0 F4                CPL     A
00A1 FF                MOV     R7,A
00A2 EE                MOV     A,R6
00A3 F4                CPL     A
00A4 FE                MOV     R6,A
00A5 900000      R     MOV     DPTR,#N
00A8 E0                MOVX    A,@DPTR
00A9 5E                ANL     A,R6
00AA F0                MOVX    @DPTR,A
00AB A3                INC     DPTR
00AC E0                MOVX    A,@DPTR
00AD 5F                ANL     A,R7
00AE F0                MOVX    @DPTR,A
00AF 22                RET     
00B0         L?0101:
00B0 E0                MOVX    A,@DPTR
00B1 2401              ADD     A,#01H
00B3 FF                MOV     R7,A
00B4         L?0102:
00B4 900000      R     MOV     DPTR,#j
00B7 E0                MOVX    A,@DPTR
00B8 3400              ADDC    A,#00H
00BA 22                RET     
00BB         L?0103:
00BB FF                MOV     R7,A
00BC E0                MOVX    A,@DPTR
00BD FB                MOV     R3,A
00BE A3                INC     DPTR
00BF E0                MOVX    A,@DPTR
00C0 FA                MOV     R2,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 2F                ADD     A,R7
00C4 F9                MOV     R1,A
00C5 EA                MOV     A,R2
00C6 3E                ADDC    A,R6
00C7 FA                MOV     R2,A
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 17  

00C8 22                RET     
00C9         L?0104:
00C9 120000      E     LCALL   ?C?FPMUL
00CC E4                CLR     A
00CD FB                MOV     R3,A
00CE FA                MOV     R2,A
00CF F9                MOV     R1,A
00D0 7843              MOV     R0,#043H
00D2 020000      E     LJMP    ?C?FPDIV
00D5         L?0105:
00D5 FF                MOV     R7,A
00D6 900000      R     MOV     DPTR,#N
00D9 E0                MOVX    A,@DPTR
00DA 4E                ORL     A,R6
00DB F0                MOVX    @DPTR,A
00DC A3                INC     DPTR
00DD E0                MOVX    A,@DPTR
00DE 4F                ORL     A,R7
00DF F0                MOVX    @DPTR,A
00E0 22                RET     
00E1         L?0106:
00E1 1582              DEC     DPL
00E3         L?0107:
00E3 E0                MOVX    A,@DPTR
00E4 33                RLC     A
00E5 8F82              MOV     DPL,R7
00E7 F583              MOV     DPH,A
00E9 22                RET     
00EA         L?0108:
00EA 7BDB              MOV     R3,#0DBH
00EC 7A0F              MOV     R2,#0FH
00EE 79C9              MOV     R1,#0C9H
00F0 7840              MOV     R0,#040H
00F2 020000      E     LJMP    ?C?FPMUL
00F5         L?0109:
00F5 E0                MOVX    A,@DPTR
00F6 FC                MOV     R4,A
00F7 A3                INC     DPTR
00F8 E0                MOVX    A,@DPTR
00F9 FD                MOV     R5,A
00FA A3                INC     DPTR
00FB E0                MOVX    A,@DPTR
00FC FE                MOV     R6,A
00FD A3                INC     DPTR
00FE E0                MOVX    A,@DPTR
00FF FF                MOV     R7,A
0100 22                RET     
0101         L?0110:
0101 120000      E     LCALL   ?C?ILDOPTR
0104 FD                MOV     R5,A
0105 ACF0              MOV     R4,B
0107 EC                MOV     A,R4
0108 020000      E     LJMP    ?C?FCASTI
010B         L?0111:
010B EB                MOV     A,R3
010C F0                MOVX    @DPTR,A
010D A3                INC     DPTR
010E EA                MOV     A,R2
010F F0                MOVX    @DPTR,A
0110 A3                INC     DPTR
0111 E9                MOV     A,R1
0112 F0                MOVX    @DPTR,A
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 18  

0113 E4                CLR     A
0114 22                RET     
0115         L?0112:
0115 E4                CLR     A
0116 FB                MOV     R3,A
0117 7A04              MOV     R2,#04H
0119 F9                MOV     R1,A
011A F8                MOV     R0,A
011B 020000      E     LJMP    ?C?SLDIV
             ; FUNCTION Com0049 (END)

             ; FUNCTION _DoBitRev (BEGIN)
                                           ; SOURCE LINE # 512
0000 900000      R     MOV     DPTR,#N
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 EC                MOV     A,R4
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C ED                MOV     A,R5
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 513
                                           ; SOURCE LINE # 516
000E E4                CLR     A
000F 900000      R     MOV     DPTR,#i
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 F0                MOVX    @DPTR,A
0015         ?C0001:
0015 900000      R     MOV     DPTR,#L
0018 120000      R     LCALL   L?0094
001B 900000      R     MOV     DPTR,#i
001E E0                MOVX    A,@DPTR
001F FC                MOV     R4,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FD                MOV     R5,A
0023 C3                CLR     C
0024 9F                SUBB    A,R7
0025 EE                MOV     A,R6
0026 6480              XRL     A,#080H
0028 F8                MOV     R0,A
0029 EC                MOV     A,R4
002A 6480              XRL     A,#080H
002C 98                SUBB    A,R0
002D 4003              JC      $ + 5H
002F 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 517
                                           ; SOURCE LINE # 518
0032 E4                CLR     A
0033 900000      R     MOV     DPTR,#Temp1
0036 F0                MOVX    @DPTR,A
0037 A3                INC     DPTR
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 519
0039 A3                INC     DPTR
003A F0                MOVX    @DPTR,A
003B A3                INC     DPTR
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 19  

003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 520
003D A905              MOV     R1,AR5
003F 04                INC     A
0040 7E00              MOV     R6,#00H
0042 A801              MOV     R0,AR1
0044 08                INC     R0
0045 8005              SJMP    ?C0037
0047         ?C0036:
0047 C3                CLR     C
0048 33                RLC     A
0049 CE                XCH     A,R6
004A 33                RLC     A
004B CE                XCH     A,R6
004C         ?C0037:
004C D8F9              DJNZ    R0,?C0036
004E FF                MOV     R7,A
004F 900000      R     MOV     DPTR,#N
0052 E0                MOVX    A,@DPTR
0053 FC                MOV     R4,A
0054 A3                INC     DPTR
0055 E0                MOVX    A,@DPTR
0056 FD                MOV     R5,A
0057 EC                MOV     A,R4
0058 5E                ANL     A,R6
0059 FE                MOV     R6,A
005A ED                MOV     A,R5
005B 5F                ANL     A,R7
005C 4E                ORL     A,R6
005D 6008              JZ      ?C0004
                                           ; SOURCE LINE # 521
005F 900000      R     MOV     DPTR,#Temp1
0062 E4                CLR     A
0063 F0                MOVX    @DPTR,A
0064 A3                INC     DPTR
0065 04                INC     A
0066 F0                MOVX    @DPTR,A
0067         ?C0004:
                                           ; SOURCE LINE # 522
0067 900000      R     MOV     DPTR,#L
006A A3                INC     DPTR
006B E0                MOVX    A,@DPTR
006C 14                DEC     A
006D C3                CLR     C
006E 99                SUBB    A,R1
006F F9                MOV     R1,A
0070 7401              MOV     A,#01H
0072 7E00              MOV     R6,#00H
0074 A801              MOV     R0,AR1
0076 08                INC     R0
0077 8005              SJMP    ?C0039
0079         ?C0038:
0079 C3                CLR     C
007A 33                RLC     A
007B CE                XCH     A,R6
007C 33                RLC     A
007D CE                XCH     A,R6
007E         ?C0039:
007E D8F9              DJNZ    R0,?C0038
0080 FF                MOV     R7,A
0081 EC                MOV     A,R4
0082 5E                ANL     A,R6
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 20  

0083 FE                MOV     R6,A
0084 ED                MOV     A,R5
0085 5F                ANL     A,R7
0086 4E                ORL     A,R6
0087 6008              JZ      ?C0005
                                           ; SOURCE LINE # 523
0089 900000      R     MOV     DPTR,#Temp2
008C E4                CLR     A
008D F0                MOVX    @DPTR,A
008E A3                INC     DPTR
008F 04                INC     A
0090 F0                MOVX    @DPTR,A
0091         ?C0005:
                                           ; SOURCE LINE # 524
0091 900000      R     MOV     DPTR,#i
0094 A3                INC     DPTR
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 7401              MOV     A,#01H
0099 7E00              MOV     R6,#00H
009B A807              MOV     R0,AR7
009D 08                INC     R0
009E 8005              SJMP    ?C0041
00A0         ?C0040:
00A0 C3                CLR     C
00A1 33                RLC     A
00A2 CE                XCH     A,R6
00A3 33                RLC     A
00A4 CE                XCH     A,R6
00A5         ?C0041:
00A5 D8F9              DJNZ    R0,?C0040
00A7 120000      R     LCALL   L?0100
                                           ; SOURCE LINE # 525
00AA 7401              MOV     A,#01H
00AC 7E00              MOV     R6,#00H
00AE A801              MOV     R0,AR1
00B0 08                INC     R0
00B1 8005              SJMP    ?C0043
00B3         ?C0042:
00B3 C3                CLR     C
00B4 33                RLC     A
00B5 CE                XCH     A,R6
00B6 33                RLC     A
00B7 CE                XCH     A,R6
00B8         ?C0043:
00B8 D8F9              DJNZ    R0,?C0042
00BA 120000      R     LCALL   L?0100
                                           ; SOURCE LINE # 526
00BD 900000      R     MOV     DPTR,#i
00C0 A3                INC     DPTR
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 900000      R     MOV     DPTR,#Temp2
00C6 E0                MOVX    A,@DPTR
00C7 FE                MOV     R6,A
00C8 A3                INC     DPTR
00C9 E0                MOVX    A,@DPTR
00CA A807              MOV     R0,AR7
00CC 08                INC     R0
00CD 8005              SJMP    ?C0045
00CF         ?C0044:
00CF C3                CLR     C
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 21  

00D0 33                RLC     A
00D1 CE                XCH     A,R6
00D2 33                RLC     A
00D3 CE                XCH     A,R6
00D4         ?C0045:
00D4 D8F9              DJNZ    R0,?C0044
00D6 120000      R     LCALL   L?0105
                                           ; SOURCE LINE # 527
00D9 900000      R     MOV     DPTR,#Temp1
00DC E0                MOVX    A,@DPTR
00DD FE                MOV     R6,A
00DE A3                INC     DPTR
00DF E0                MOVX    A,@DPTR
00E0 A801              MOV     R0,AR1
00E2 08                INC     R0
00E3 8005              SJMP    ?C0047
00E5         ?C0046:
00E5 C3                CLR     C
00E6 33                RLC     A
00E7 CE                XCH     A,R6
00E8 33                RLC     A
00E9 CE                XCH     A,R6
00EA         ?C0047:
00EA D8F9              DJNZ    R0,?C0046
00EC 120000      R     LCALL   L?0105
                                           ; SOURCE LINE # 528
00EF 900000      R     MOV     DPTR,#i+01H
00F2 E0                MOVX    A,@DPTR
00F3 04                INC     A
00F4 F0                MOVX    @DPTR,A
00F5 6003              JZ      $ + 5H
00F7 020000      R     LJMP    ?C0001
00FA 900000      R     MOV     DPTR,#i
00FD E0                MOVX    A,@DPTR
00FE 04                INC     A
00FF F0                MOVX    @DPTR,A
0100         ?C0048:
0100 020000      R     LJMP    ?C0001
0103         ?C0002:
                                           ; SOURCE LINE # 529
0103 900000      R     MOV     DPTR,#N
0106 E0                MOVX    A,@DPTR
0107 FE                MOV     R6,A
0108 A3                INC     DPTR
0109 E0                MOVX    A,@DPTR
010A FF                MOV     R7,A
                                           ; SOURCE LINE # 530
010B         ?C0006:
010B 22                RET     
             ; FUNCTION _DoBitRev (END)

             ; FUNCTION InitBitRev (BEGIN)
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 542
;---- Variable 'i' assigned to Register 'R2/R3' ----
0000 E4                CLR     A
0001 FB                MOV     R3,A
0002 FA                MOV     R2,A
0003         ?C0007:
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 544
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 22  

0003 AF03              MOV     R7,AR3
0005 AE02              MOV     R6,AR2
0007 7D09              MOV     R5,#09H
0009 7C00              MOV     R4,#00H
000B 120000      R     LCALL   _DoBitRev
000E AC06              MOV     R4,AR6
0010 AD07              MOV     R5,AR7
0012 EB                MOV     A,R3
0013 25E0              ADD     A,ACC
0015 FF                MOV     R7,A
0016 EA                MOV     A,R2
0017 120000      R     LCALL   L?0091
001A EC                MOV     A,R4
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D ED                MOV     A,R5
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 545
001F 0B                INC     R3
0020 BB0001            CJNE    R3,#00H,?C0049
0023 0A                INC     R2
0024         ?C0049:
0024 EB                MOV     A,R3
0025 6480              XRL     A,#080H
0027 4A                ORL     A,R2
0028 70D9              JNZ     ?C0007
                                           ; SOURCE LINE # 546
002A         ?C0010:
002A 22                RET     
             ; FUNCTION InitBitRev (END)

             ; FUNCTION _FftInput (BEGIN)
                                           ; SOURCE LINE # 555
;---- Variable 'pIn' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 556
                                           ; SOURCE LINE # 559
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
0007         ?C0011:
                                           ; SOURCE LINE # 560
                                           ; SOURCE LINE # 561
0007 900000      R     MOV     DPTR,#i
000A E0                MOVX    A,@DPTR
000B FC                MOV     R4,A
000C A3                INC     DPTR
000D E0                MOVX    A,@DPTR
000E FD                MOV     R5,A
000F 25E0              ADD     A,ACC
0011 FF                MOV     R7,A
0012 EC                MOV     A,R4
0013 120000      R     LCALL   L?0091
0016 E0                MOVX    A,@DPTR
0017 FE                MOV     R6,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A D3                SETB    C
001B 9D                SUBB    A,R5
001C EC                MOV     A,R4
001D 6480              XRL     A,#080H
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 23  

001F F8                MOV     R0,A
0020 EE                MOV     A,R6
0021 6480              XRL     A,#080H
0023 98                SUBB    A,R0
0024 4058              JC      ?C0013
                                           ; SOURCE LINE # 562
                                           ; SOURCE LINE # 563
0026 120000      R     LCALL   L?0097
0029 8F82              MOV     DPL,R7
002B F583              MOV     DPH,A
002D 120000      E     LCALL   ?C?ILDOPTR
0030 FD                MOV     R5,A
0031 900000      R     MOV     DPTR,#Temp
0034 E5F0              MOV     A,B
0036 F0                MOVX    @DPTR,A
0037 A3                INC     DPTR
0038 ED                MOV     A,R5
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 564
003A 120000      R     LCALL   L?0092
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F 25E0              ADD     A,ACC
0041 FF                MOV     R7,A
0042 0582              INC     DPL
0044 D58202            DJNZ    DPL,?C0050
0047 1583              DEC     DPH
0049         ?C0050:
0049 120000      R     LCALL   L?0106
004C 120000      E     LCALL   ?C?ILDOPTR
004F FD                MOV     R5,A
0050 120000      R     LCALL   L?0097
0053 8F82              MOV     DPL,R7
0055 F583              MOV     DPH,A
0057 E5F0              MOV     A,B
0059 8DF0              MOV     B,R5
005B 120000      E     LCALL   ?C?ISTOPTR
                                           ; SOURCE LINE # 565
005E 900000      R     MOV     DPTR,#Temp
0061 E0                MOVX    A,@DPTR
0062 FC                MOV     R4,A
0063 A3                INC     DPTR
0064 E0                MOVX    A,@DPTR
0065 FD                MOV     R5,A
0066 120000      R     LCALL   L?0092
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B 25E0              ADD     A,ACC
006D FF                MOV     R7,A
006E 0582              INC     DPL
0070 D58202            DJNZ    DPL,?C0051
0073 1583              DEC     DPH
0075         ?C0051:
0075 120000      R     LCALL   L?0106
0078 EC                MOV     A,R4
0079 8DF0              MOV     B,R5
007B 120000      E     LCALL   ?C?ISTOPTR
                                           ; SOURCE LINE # 566
                                           ; SOURCE LINE # 567
007E         ?C0013:
007E 900000      R     MOV     DPTR,#i+01H
0081 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 24  

0082 04                INC     A
0083 F0                MOVX    @DPTR,A
0084 7006              JNZ     ?C0052
0086 900000      R     MOV     DPTR,#i
0089 E0                MOVX    A,@DPTR
008A 04                INC     A
008B F0                MOVX    @DPTR,A
008C         ?C0052:
008C 900000      R     MOV     DPTR,#i
008F E0                MOVX    A,@DPTR
0090 7004              JNZ     ?C0053
0092 A3                INC     DPTR
0093 E0                MOVX    A,@DPTR
0094 6480              XRL     A,#080H
0096         ?C0053:
0096 6003              JZ      $ + 5H
0098 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 568
009B         ?C0015:
009B 22                RET     
             ; FUNCTION _FftInput (END)

             ; FUNCTION _FftExe (BEGIN)
                                           ; SOURCE LINE # 577
0000 900000      R     MOV     DPTR,#pIn
                                           ; SOURCE LINE # 578
                                           ; SOURCE LINE # 591
0003 120000      R     LCALL   L?0111
0006 900000      R     MOV     DPTR,#j
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B F0                MOVX    @DPTR,A
000C         ?C0016:
000C 120000      R     LCALL   L?0089
000F 4003              JC      $ + 5H
0011 020000      R     LJMP    ?C0017
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 593
0014 A3                INC     DPTR
0015 120000      R     LCALL   L?0101
0018 FE                MOV     R6,A
0019 EF                MOV     A,R7
001A 25E0              ADD     A,ACC
001C FF                MOV     R7,A
001D EE                MOV     A,R6
001E 33                RLC     A
001F FE                MOV     R6,A
0020 900000      R     MOV     DPTR,#pIn
0023 120000      R     LCALL   L?0077
0026 120000      E     LCALL   ?C?ILDOPTR
0029 FF                MOV     R7,A
002A AEF0              MOV     R6,B
002C 900000      R     MOV     DPTR,#tr
002F 120000      R     LCALL   L?0099
                                           ; SOURCE LINE # 594
0032 900000      R     MOV     DPTR,#j+01H
0035 E0                MOVX    A,@DPTR
0036 25E0              ADD     A,ACC
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#j
003C 120000      R     LCALL   L?0107
003F 120000      R     LCALL   L?0078
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 25  

0042 120000      R     LCALL   L?0086
0045 C004              PUSH    AR4
0047 C005              PUSH    AR5
0049 C006              PUSH    AR6
004B C007              PUSH    AR7
004D 900000      R     MOV     DPTR,#j+01H
0050 120000      R     LCALL   L?0101
0053 FE                MOV     R6,A
0054 EF                MOV     A,R7
0055 7802              MOV     R0,#02H
0057         ?C0054:
0057 C3                CLR     C
0058 33                RLC     A
0059 CE                XCH     A,R6
005A 33                RLC     A
005B CE                XCH     A,R6
005C D8F9              DJNZ    R0,?C0054
005E 120000      R     LCALL   L?0074
0061 D007              POP     AR7
0063 D006              POP     AR6
0065 D005              POP     AR5
0067 D004              POP     AR4
0069 120000      E     LCALL   ?C?LSTOPTR
                                           ; SOURCE LINE # 595
006C 900000      R     MOV     DPTR,#j
006F E0                MOVX    A,@DPTR
0070 FC                MOV     R4,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FD                MOV     R5,A
0074 2401              ADD     A,#01H
0076 FF                MOV     R7,A
0077 E4                CLR     A
0078 3C                ADDC    A,R4
0079 FE                MOV     R6,A
007A EF                MOV     A,R7
007B 7802              MOV     R0,#02H
007D         ?C0055:
007D C3                CLR     C
007E 33                RLC     A
007F CE                XCH     A,R6
0080 33                RLC     A
0081 CE                XCH     A,R6
0082 D8F9              DJNZ    R0,?C0055
0084 900000      R     MOV     DPTR,#pIm
0087 120000      R     LCALL   L?0076
008A 120000      E     LCALL   ?C?LSTKOPTR
008D 00                DB      00H
008E 00                DB      00H
008F 00                DB      00H
0090 00                DB      00H
                                           ; SOURCE LINE # 596
0091 ED                MOV     A,R5
0092 25E0              ADD     A,ACC
0094 FF                MOV     R7,A
0095 EC                MOV     A,R4
0096 33                RLC     A
0097 FE                MOV     R6,A
0098 900000      R     MOV     DPTR,#pIn
009B 120000      R     LCALL   L?0077
009E 120000      R     LCALL   L?0078
00A1 120000      R     LCALL   L?0085
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 26  

00A4 C004              PUSH    AR4
00A6 C005              PUSH    AR5
00A8 C006              PUSH    AR6
00AA C007              PUSH    AR7
00AC 900000      R     MOV     DPTR,#j
00AF 120000      R     LCALL   L?0083
00B2         ?C0056:
00B2 C3                CLR     C
00B3 33                RLC     A
00B4 CE                XCH     A,R6
00B5 33                RLC     A
00B6 CE                XCH     A,R6
00B7 D8F9              DJNZ    R0,?C0056
00B9 120000      R     LCALL   L?0074
00BC D007              POP     AR7
00BE D006              POP     AR6
00C0 D005              POP     AR5
00C2 D004              POP     AR4
00C4 120000      E     LCALL   ?C?LSTOPTR
                                           ; SOURCE LINE # 597
00C7 900000      R     MOV     DPTR,#j
00CA 120000      R     LCALL   L?0083
00CD         ?C0057:
00CD C3                CLR     C
00CE 33                RLC     A
00CF CE                XCH     A,R6
00D0 33                RLC     A
00D1 CE                XCH     A,R6
00D2 D8F9              DJNZ    R0,?C0057
00D4 FF                MOV     R7,A
00D5 900000      R     MOV     DPTR,#pIm
00D8 120000      R     LCALL   L?0077
00DB 120000      E     LCALL   ?C?LSTKOPTR
00DE 00                DB      00H
00DF 00                DB      00H
00E0 00                DB      00H
00E1 00                DB      00H
                                           ; SOURCE LINE # 598
00E2 900000      R     MOV     DPTR,#j+01H
00E5 E0                MOVX    A,@DPTR
00E6 2402              ADD     A,#02H
00E8 F0                MOVX    @DPTR,A
00E9 120000      R     LCALL   L?0102
00EC F0                MOVX    @DPTR,A
00ED 020000      R     LJMP    ?C0016
00F0         ?C0017:
                                           ; SOURCE LINE # 600
00F0 900000      R     MOV     DPTR,#BlockSize
00F3 E4                CLR     A
00F4 F0                MOVX    @DPTR,A
00F5 A3                INC     DPTR
00F6 7404              MOV     A,#04H
00F8 F0                MOVX    @DPTR,A
00F9         ?C0019:
00F9 D3                SETB    C
00FA 900000      R     MOV     DPTR,#BlockSize+01H
00FD E0                MOVX    A,@DPTR
00FE 900000      R     MOV     DPTR,#BlockSize
0101 120000      R     LCALL   L?0090
0104 4003              JC      $ + 5H
0106 020000      R     LJMP    ?C0028
                                           ; SOURCE LINE # 601
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 27  

                                           ; SOURCE LINE # 602
0109 E4                CLR     A
010A 900000      R     MOV     DPTR,#j
010D F0                MOVX    @DPTR,A
010E A3                INC     DPTR
010F F0                MOVX    @DPTR,A
0110         ?C0022:
0110 120000      R     LCALL   L?0089
0113 4003              JC      $ + 5H
0115 020000      R     LJMP    ?C0021
                                           ; SOURCE LINE # 603
                                           ; SOURCE LINE # 604
0118 E4                CLR     A
0119 900000      R     MOV     DPTR,#i
011C F0                MOVX    @DPTR,A
011D A3                INC     DPTR
011E F0                MOVX    @DPTR,A
011F         ?C0025:
011F 120000      R     LCALL   L?0093
0122 C3                CLR     C
0123 900000      R     MOV     DPTR,#i+01H
0126 E0                MOVX    A,@DPTR
0127 9F                SUBB    A,R7
0128 EE                MOV     A,R6
0129 6480              XRL     A,#080H
012B F8                MOV     R0,A
012C 900000      R     MOV     DPTR,#i
012F E0                MOVX    A,@DPTR
0130 6480              XRL     A,#080H
0132 98                SUBB    A,R0
0133 4003              JC      $ + 5H
0135 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 605
                                           ; SOURCE LINE # 610
0138 900000      R     MOV     DPTR,#BlockSize
013B E0                MOVX    A,@DPTR
013C FC                MOV     R4,A
013D A3                INC     DPTR
013E E0                MOVX    A,@DPTR
013F FD                MOV     R5,A
0140 7E00              MOV     R6,#00H
0142 7F80              MOV     R7,#080H
0144 120000      E     LCALL   ?C?SIDIV
0147 900000      R     MOV     DPTR,#i
014A E0                MOVX    A,@DPTR
014B FC                MOV     R4,A
014C A3                INC     DPTR
014D E0                MOVX    A,@DPTR
014E FD                MOV     R5,A
014F 120000      E     LCALL   ?C?IMUL
0152 900000      R     MOV     DPTR,#OffSet0
0155 EE                MOV     A,R6
0156 F0                MOVX    @DPTR,A
0157 A3                INC     DPTR
0158 EF                MOV     A,R7
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
015A E0                MOVX    A,@DPTR
015B 25E0              ADD     A,ACC
015D FB                MOV     R3,A
015E 900000      R     MOV     DPTR,#OffSet0
0161 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 28  

0162 33                RLC     A
0163 FA                MOV     R2,A
0164 7400        R     MOV     A,#LOW COS_TABLE
0166 2B                ADD     A,R3
0167 F582              MOV     DPL,A
0169 7400        R     MOV     A,#HIGH COS_TABLE
016B 3A                ADDC    A,R2
016C F583              MOV     DPH,A
016E E0                MOVX    A,@DPTR
016F FE                MOV     R6,A
0170 A3                INC     DPTR
0171 E0                MOVX    A,@DPTR
0172 FF                MOV     R7,A
0173 900000      R     MOV     DPTR,#c
0176 120000      R     LCALL   L?0099
                                           ; SOURCE LINE # 612
0179 7400        R     MOV     A,#LOW SIN_TABLE
017B 2B                ADD     A,R3
017C F582              MOV     DPL,A
017E 7400        R     MOV     A,#HIGH SIN_TABLE
0180 3A                ADDC    A,R2
0181 F583              MOV     DPH,A
0183 E0                MOVX    A,@DPTR
0184 FE                MOV     R6,A
0185 A3                INC     DPTR
0186 E0                MOVX    A,@DPTR
0187 FF                MOV     R7,A
0188 EE                MOV     A,R6
0189 33                RLC     A
018A 95E0              SUBB    A,ACC
018C FD                MOV     R5,A
018D FC                MOV     R4,A
018E 900000      R     MOV     DPTR,#s
0191 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 615
0194 900000      R     MOV     DPTR,#j
0197 E0                MOVX    A,@DPTR
0198 FE                MOV     R6,A
0199 A3                INC     DPTR
019A E0                MOVX    A,@DPTR
019B FF                MOV     R7,A
019C 900000      R     MOV     DPTR,#i+01H
019F E0                MOVX    A,@DPTR
01A0 2F                ADD     A,R7
01A1 FF                MOV     R7,A
01A2 900000      R     MOV     DPTR,#i
01A5 E0                MOVX    A,@DPTR
01A6 3E                ADDC    A,R6
01A7 900000      R     MOV     DPTR,#OffSet1
01AA F0                MOVX    @DPTR,A
01AB FA                MOV     R2,A
01AC A3                INC     DPTR
01AD EF                MOV     A,R7
01AE F0                MOVX    @DPTR,A
01AF FB                MOV     R3,A
                                           ; SOURCE LINE # 616
01B0 120000      R     LCALL   L?0093
01B3 EF                MOV     A,R7
01B4 2B                ADD     A,R3
01B5 FF                MOV     R7,A
01B6 EE                MOV     A,R6
01B7 3A                ADDC    A,R2
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 29  

01B8 900000      R     MOV     DPTR,#OffSet2
01BB F0                MOVX    @DPTR,A
01BC A3                INC     DPTR
01BD EF                MOV     A,R7
01BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
01BF 120000      R     LCALL   L?0081
01C2         ?C0058:
01C2 C3                CLR     C
01C3 33                RLC     A
01C4 CE                XCH     A,R6
01C5 33                RLC     A
01C6 CE                XCH     A,R6
01C7 D8F9              DJNZ    R0,?C0058
01C9 FF                MOV     R7,A
01CA 900000      R     MOV     DPTR,#pIm
01CD 120000      R     LCALL   L?0077
01D0 120000      E     LCALL   ?C?LLDOPTR
01D3 900000      R     MOV     DPTR,#s
01D6 120000      R     LCALL   L?0080
01D9 FB                MOV     R3,A
01DA 120000      E     LCALL   ?C?LMUL
01DD C004              PUSH    AR4
01DF C005              PUSH    AR5
01E1 C006              PUSH    AR6
01E3 C007              PUSH    AR7
01E5 120000      R     LCALL   L?0081
01E8         ?C0059:
01E8 C3                CLR     C
01E9 33                RLC     A
01EA CE                XCH     A,R6
01EB 33                RLC     A
01EC CE                XCH     A,R6
01ED D8F9              DJNZ    R0,?C0059
01EF 120000      R     LCALL   L?0075
01F2 120000      E     LCALL   ?C?LLDOPTR
01F5 900000      R     MOV     DPTR,#c
01F8 120000      R     LCALL   L?0080
01FB FB                MOV     R3,A
01FC 120000      E     LCALL   ?C?LMUL
01FF D003              POP     AR3
0201 D002              POP     AR2
0203 D001              POP     AR1
0205 D000              POP     AR0
0207 EF                MOV     A,R7
0208 2B                ADD     A,R3
0209 FF                MOV     R7,A
020A EE                MOV     A,R6
020B 3A                ADDC    A,R2
020C FE                MOV     R6,A
020D ED                MOV     A,R5
020E 39                ADDC    A,R1
020F FD                MOV     R5,A
0210 EC                MOV     A,R4
0211 38                ADDC    A,R0
0212 FC                MOV     R4,A
0213 120000      R     LCALL   L?0112
0216 900000      R     MOV     DPTR,#tr
0219 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 618
021C 120000      R     LCALL   L?0082
021F         ?C0060:
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 30  

021F C3                CLR     C
0220 33                RLC     A
0221 CE                XCH     A,R6
0222 33                RLC     A
0223 CE                XCH     A,R6
0224 D8F9              DJNZ    R0,?C0060
0226 120000      R     LCALL   L?0075
0229 120000      E     LCALL   ?C?LLDOPTR
022C 900000      R     MOV     DPTR,#s
022F 120000      R     LCALL   L?0080
0232 FB                MOV     R3,A
0233 120000      E     LCALL   ?C?LMUL
0236 C004              PUSH    AR4
0238 C005              PUSH    AR5
023A C006              PUSH    AR6
023C C007              PUSH    AR7
023E 120000      R     LCALL   L?0082
0241         ?C0061:
0241 C3                CLR     C
0242 33                RLC     A
0243 CE                XCH     A,R6
0244 33                RLC     A
0245 CE                XCH     A,R6
0246 D8F9              DJNZ    R0,?C0061
0248 FF                MOV     R7,A
0249 900000      R     MOV     DPTR,#pIm
024C 120000      R     LCALL   L?0077
024F 120000      E     LCALL   ?C?LLDOPTR
0252 900000      R     MOV     DPTR,#c
0255 120000      R     LCALL   L?0080
0258 FB                MOV     R3,A
0259 120000      E     LCALL   ?C?LMUL
025C D003              POP     AR3
025E D002              POP     AR2
0260 D001              POP     AR1
0262 D000              POP     AR0
0264 120000      R     LCALL   L?0088
0267 120000      R     LCALL   L?0112
026A 900000      R     MOV     DPTR,#ti
026D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 625
0270 900000      R     MOV     DPTR,#OffSet1
0273 120000      R     LCALL   L?0083
0276         ?C0062:
0276 C3                CLR     C
0277 33                RLC     A
0278 CE                XCH     A,R6
0279 33                RLC     A
027A CE                XCH     A,R6
027B D8F9              DJNZ    R0,?C0062
027D 120000      R     LCALL   L?0075
0280 120000      E     LCALL   ?C?LLDOPTR
0283 120000      R     LCALL   L?0079
0286 120000      R     LCALL   L?0086
0289 C004              PUSH    AR4
028B C005              PUSH    AR5
028D C006              PUSH    AR6
028F C007              PUSH    AR7
0291 120000      R     LCALL   L?0082
0294         ?C0063:
0294 C3                CLR     C
0295 33                RLC     A
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 31  

0296 CE                XCH     A,R6
0297 33                RLC     A
0298 CE                XCH     A,R6
0299 D8F9              DJNZ    R0,?C0063
029B 120000      R     LCALL   L?0075
029E D007              POP     AR7
02A0 D006              POP     AR6
02A2 D005              POP     AR5
02A4 D004              POP     AR4
02A6 120000      E     LCALL   ?C?LSTOPTR
                                           ; SOURCE LINE # 626
02A9 900000      R     MOV     DPTR,#OffSet1
02AC 120000      R     LCALL   L?0083
02AF         ?C0064:
02AF C3                CLR     C
02B0 33                RLC     A
02B1 CE                XCH     A,R6
02B2 33                RLC     A
02B3 CE                XCH     A,R6
02B4 D8F9              DJNZ    R0,?C0064
02B6 FF                MOV     R7,A
02B7 900000      R     MOV     DPTR,#pIm
02BA 120000      R     LCALL   L?0077
02BD 120000      E     LCALL   ?C?LLDOPTR
02C0 900000      R     MOV     DPTR,#ti
02C3 120000      R     LCALL   L?0080
02C6 120000      R     LCALL   L?0087
02C9 C004              PUSH    AR4
02CB C005              PUSH    AR5
02CD C006              PUSH    AR6
02CF C007              PUSH    AR7
02D1 120000      R     LCALL   L?0082
02D4         ?C0065:
02D4 C3                CLR     C
02D5 33                RLC     A
02D6 CE                XCH     A,R6
02D7 33                RLC     A
02D8 CE                XCH     A,R6
02D9 D8F9              DJNZ    R0,?C0065
02DB FF                MOV     R7,A
02DC 900000      R     MOV     DPTR,#pIm
02DF 120000      R     LCALL   L?0077
02E2 D007              POP     AR7
02E4 D006              POP     AR6
02E6 D005              POP     AR5
02E8 D004              POP     AR4
02EA 120000      E     LCALL   ?C?LSTOPTR
                                           ; SOURCE LINE # 627
02ED 900000      R     MOV     DPTR,#OffSet1
02F0 120000      R     LCALL   L?0083
02F3         ?C0066:
02F3 C3                CLR     C
02F4 33                RLC     A
02F5 CE                XCH     A,R6
02F6 33                RLC     A
02F7 CE                XCH     A,R6
02F8 D8F9              DJNZ    R0,?C0066
02FA 900000      R     MOV     DPTR,#pRe
02FD 120000      R     LCALL   L?0103
0300 C002              PUSH    AR2
0302 C001              PUSH    AR1
0304 120000      E     LCALL   ?C?LLDPTR
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 32  

0307 120000      R     LCALL   L?0079
030A 120000      R     LCALL   L?0085
030D D001              POP     AR1
030F D002              POP     AR2
0311 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 628
0314 900000      R     MOV     DPTR,#OffSet1
0317 120000      R     LCALL   L?0083
031A         ?C0067:
031A C3                CLR     C
031B 33                RLC     A
031C CE                XCH     A,R6
031D 33                RLC     A
031E CE                XCH     A,R6
031F D8F9              DJNZ    R0,?C0067
0321 900000      R     MOV     DPTR,#pIm
0324 120000      R     LCALL   L?0103
0327 C002              PUSH    AR2
0329 C001              PUSH    AR1
032B 120000      E     LCALL   ?C?LLDPTR
032E 900000      R     MOV     DPTR,#ti
0331 120000      R     LCALL   L?0080
0334 120000      R     LCALL   L?0085
0337 D001              POP     AR1
0339 D002              POP     AR2
033B 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 630
033E 900000      R     MOV     DPTR,#i+01H
0341 E0                MOVX    A,@DPTR
0342 04                INC     A
0343 F0                MOVX    @DPTR,A
0344 7006              JNZ     ?C0068
0346 900000      R     MOV     DPTR,#i
0349 E0                MOVX    A,@DPTR
034A 04                INC     A
034B F0                MOVX    @DPTR,A
034C         ?C0068:
034C 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 631
034F         ?C0024:
034F 900000      R     MOV     DPTR,#BlockSize
0352 E0                MOVX    A,@DPTR
0353 FE                MOV     R6,A
0354 A3                INC     DPTR
0355 E0                MOVX    A,@DPTR
0356 FF                MOV     R7,A
0357 900000      R     MOV     DPTR,#j+01H
035A E0                MOVX    A,@DPTR
035B 2F                ADD     A,R7
035C F0                MOVX    @DPTR,A
035D 900000      R     MOV     DPTR,#j
0360 E0                MOVX    A,@DPTR
0361 3E                ADDC    A,R6
0362 F0                MOVX    @DPTR,A
0363 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 632
0366         ?C0021:
0366 900000      R     MOV     DPTR,#BlockSize+01H
0369 E0                MOVX    A,@DPTR
036A 25E0              ADD     A,ACC
036C F0                MOVX    @DPTR,A
036D 900000      R     MOV     DPTR,#BlockSize
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 33  

0370 E0                MOVX    A,@DPTR
0371 33                RLC     A
0372 F0                MOVX    @DPTR,A
0373 020000      R     LJMP    ?C0019
                                           ; SOURCE LINE # 637
0376         ?C0028:
0376 22                RET     
             ; FUNCTION _FftExe (END)

             ; FUNCTION _DftExe (BEGIN)
                                           ; SOURCE LINE # 646
0000 900000      R     MOV     DPTR,#pIn
                                           ; SOURCE LINE # 647
                                           ; SOURCE LINE # 650
0003 120000      R     LCALL   L?0111
0006 900000      R     MOV     DPTR,#i
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B F0                MOVX    @DPTR,A
000C         ?C0029:
                                           ; SOURCE LINE # 651
                                           ; SOURCE LINE # 652
000C 900000      R     MOV     DPTR,#tRe
000F 120000      E     LCALL   ?C?LSTKXDATA
0012 00                DB      00H
0013 00                DB      00H
0014 00                DB      00H
0015 00                DB      00H
                                           ; SOURCE LINE # 653
0016 900000      R     MOV     DPTR,#tIm
0019 120000      E     LCALL   ?C?LSTKXDATA
001C 00                DB      00H
001D 00                DB      00H
001E 00                DB      00H
001F 00                DB      00H
                                           ; SOURCE LINE # 654
0020 E4                CLR     A
0021 900000      R     MOV     DPTR,#j
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 F0                MOVX    @DPTR,A
0027         ?C0032:
                                           ; SOURCE LINE # 655
                                           ; SOURCE LINE # 656
0027 900000      R     MOV     DPTR,#tRe
002A 120000      R     LCALL   L?0080
002D FB                MOV     R3,A
002E C000              PUSH    AR0
0030 C001              PUSH    AR1
0032 C002              PUSH    AR2
0034 C003              PUSH    AR3
0036 120000      R     LCALL   L?0095
0039 120000      R     LCALL   L?0108
003C C004              PUSH    AR4
003E C005              PUSH    AR5
0040 C006              PUSH    AR6
0042 C007              PUSH    AR7
0044 900000      R     MOV     DPTR,#j
0047 120000      R     LCALL   L?0096
004A D003              POP     AR3
004C D002              POP     AR2
004E D001              POP     AR1
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 34  

0050 D000              POP     AR0
0052 120000      R     LCALL   L?0104
0055 120000      E     LCALL   _cos
0058 C004              PUSH    AR4
005A C005              PUSH    AR5
005C C006              PUSH    AR6
005E C007              PUSH    AR7
0060 900000      R     MOV     DPTR,#j+01H
0063 E0                MOVX    A,@DPTR
0064 900000      R     MOV     DPTR,#j
0067 120000      R     LCALL   L?0098
006A 900000      R     MOV     DPTR,#pIn
006D 120000      R     LCALL   L?0077
0070 120000      R     LCALL   L?0110
0073 D003              POP     AR3
0075 D002              POP     AR2
0077 D001              POP     AR1
0079 D000              POP     AR0
007B 120000      E     LCALL   ?C?FPMUL
007E 120000      E     LCALL   ?C?CASTF
0081 D003              POP     AR3
0083 D002              POP     AR2
0085 D001              POP     AR1
0087 D000              POP     AR0
0089 120000      R     LCALL   L?0084
008C 900000      R     MOV     DPTR,#tRe
008F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 657
0092 900000      R     MOV     DPTR,#tIm
0095 120000      R     LCALL   L?0080
0098 FB                MOV     R3,A
0099 C000              PUSH    AR0
009B C001              PUSH    AR1
009D C002              PUSH    AR2
009F C003              PUSH    AR3
00A1 120000      R     LCALL   L?0095
00A4 120000      R     LCALL   L?0108
00A7 C004              PUSH    AR4
00A9 C005              PUSH    AR5
00AB C006              PUSH    AR6
00AD C007              PUSH    AR7
00AF 900000      R     MOV     DPTR,#j
00B2 120000      R     LCALL   L?0096
00B5 D003              POP     AR3
00B7 D002              POP     AR2
00B9 D001              POP     AR1
00BB D000              POP     AR0
00BD 120000      R     LCALL   L?0104
00C0 120000      E     LCALL   _sin
00C3 C004              PUSH    AR4
00C5 C005              PUSH    AR5
00C7 C006              PUSH    AR6
00C9 C007              PUSH    AR7
00CB 900000      R     MOV     DPTR,#j+01H
00CE E0                MOVX    A,@DPTR
00CF 25E0              ADD     A,ACC
00D1 FF                MOV     R7,A
00D2 900000      R     MOV     DPTR,#j
00D5 E0                MOVX    A,@DPTR
00D6 33                RLC     A
00D7 FE                MOV     R6,A
00D8 900000      R     MOV     DPTR,#pIn
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 35  

00DB 120000      R     LCALL   L?0077
00DE 120000      R     LCALL   L?0110
00E1 D003              POP     AR3
00E3 D002              POP     AR2
00E5 D001              POP     AR1
00E7 D000              POP     AR0
00E9 120000      E     LCALL   ?C?FPMUL
00EC 120000      E     LCALL   ?C?FPNEG
00EF 120000      E     LCALL   ?C?CASTF
00F2 D003              POP     AR3
00F4 D002              POP     AR2
00F6 D001              POP     AR1
00F8 D000              POP     AR0
00FA 120000      R     LCALL   L?0084
00FD 900000      R     MOV     DPTR,#tIm
0100 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 658
0103 900000      R     MOV     DPTR,#j+01H
0106 E0                MOVX    A,@DPTR
0107 04                INC     A
0108 F0                MOVX    @DPTR,A
0109 7006              JNZ     ?C0069
010B 900000      R     MOV     DPTR,#j
010E E0                MOVX    A,@DPTR
010F 04                INC     A
0110 F0                MOVX    @DPTR,A
0111         ?C0069:
0111 C3                CLR     C
0112 900000      R     MOV     DPTR,#j+01H
0115 E0                MOVX    A,@DPTR
0116 9480              SUBB    A,#080H
0118 900000      R     MOV     DPTR,#j
011B E0                MOVX    A,@DPTR
011C 6480              XRL     A,#080H
011E 9480              SUBB    A,#080H
0120 5003              JNC     $ + 5H
0122 020000      R     LJMP    ?C0032
0125         ?C0033:
                                           ; SOURCE LINE # 671
0125 900000      R     MOV     DPTR,#tRe
0128 120000      R     LCALL   L?0109
012B C004              PUSH    AR4
012D C005              PUSH    AR5
012F C006              PUSH    AR6
0131 C007              PUSH    AR7
0133 900000      R     MOV     DPTR,#i
0136 120000      R     LCALL   L?0083
0139         ?C0070:
0139 C3                CLR     C
013A 33                RLC     A
013B CE                XCH     A,R6
013C 33                RLC     A
013D CE                XCH     A,R6
013E D8F9              DJNZ    R0,?C0070
0140 FF                MOV     R7,A
0141 900000      R     MOV     DPTR,#pRe
0144 120000      R     LCALL   L?0077
0147 D007              POP     AR7
0149 D006              POP     AR6
014B D005              POP     AR5
014D D004              POP     AR4
014F 120000      E     LCALL   ?C?LSTOPTR
C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 36  

                                           ; SOURCE LINE # 672
0152 900000      R     MOV     DPTR,#tIm
0155 120000      R     LCALL   L?0109
0158 C004              PUSH    AR4
015A C005              PUSH    AR5
015C C006              PUSH    AR6
015E C007              PUSH    AR7
0160 900000      R     MOV     DPTR,#i
0163 120000      R     LCALL   L?0083
0166         ?C0071:
0166 C3                CLR     C
0167 33                RLC     A
0168 CE                XCH     A,R6
0169 33                RLC     A
016A CE                XCH     A,R6
016B D8F9              DJNZ    R0,?C0071
016D FF                MOV     R7,A
016E 900000      R     MOV     DPTR,#pIm
0171 120000      R     LCALL   L?0077
0174 D007              POP     AR7
0176 D006              POP     AR6
0178 D005              POP     AR5
017A D004              POP     AR4
017C 120000      E     LCALL   ?C?LSTOPTR
                                           ; SOURCE LINE # 674
017F 900000      R     MOV     DPTR,#i+01H
0182 E0                MOVX    A,@DPTR
0183 04                INC     A
0184 F0                MOVX    @DPTR,A
0185 7006              JNZ     ?C0072
0187 900000      R     MOV     DPTR,#i
018A E0                MOVX    A,@DPTR
018B 04                INC     A
018C F0                MOVX    @DPTR,A
018D         ?C0072:
018D C3                CLR     C
018E 900000      R     MOV     DPTR,#i+01H
0191 E0                MOVX    A,@DPTR
0192 9480              SUBB    A,#080H
0194 900000      R     MOV     DPTR,#i
0197 E0                MOVX    A,@DPTR
0198 6480              XRL     A,#080H
019A 9480              SUBB    A,#080H
019C 5003              JNC     $ + 5H
019E 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 675
01A1         ?C0035:
01A1 22                RET     
             ; FUNCTION _DftExe (END)

C51 COMPILER V9.01   FFT                                                                   03/13/2011 09:29:36 PAGE 37  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_DoBitRev. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  N. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0000H  2
  L. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0002H  2
  Temp1. . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0004H  2
  Temp2. . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0006H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0008H  2
COS_TABLE. . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0000H  128
SIN_TABLE. . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0080H  128
_FftInput. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pIn. . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0000H  2
  Temp . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0002H  2
_DftExe. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pIn. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  pRe. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  pIm. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0006H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0009H  2
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      000BH  2
  tRe. . . . . . . . . . . . . . . . .  AUTO     XDATA  LONG     000DH  4
  tIm. . . . . . . . . . . . . . . . .  AUTO     XDATA  LONG     0011H  4
_FftExe. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pIn. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  pRe. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  pIm. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0006H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0009H  2
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      000BH  2
  BlockSize. . . . . . . . . . . . . .  AUTO     XDATA  INT      000DH  2
  tr . . . . . . . . . . . . . . . . .  AUTO     XDATA  LONG     000FH  4
  ti . . . . . . . . . . . . . . . . .  AUTO     XDATA  LONG     0013H  4
  OffSet1. . . . . . . . . . . . . . .  AUTO     XDATA  INT      0017H  2
  OffSet2. . . . . . . . . . . . . . .  AUTO     XDATA  INT      0019H  2
  OffSet0. . . . . . . . . . . . . . .  AUTO     XDATA  INT      001BH  2
  c. . . . . . . . . . . . . . . . . .  AUTO     XDATA  LONG     001DH  4
  s. . . . . . . . . . . . . . . . . .  AUTO     XDATA  LONG     0021H  4
_cos . . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_sin . . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
BitRev . . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0100H  256
InitBitRev . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2058    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    512      72
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
