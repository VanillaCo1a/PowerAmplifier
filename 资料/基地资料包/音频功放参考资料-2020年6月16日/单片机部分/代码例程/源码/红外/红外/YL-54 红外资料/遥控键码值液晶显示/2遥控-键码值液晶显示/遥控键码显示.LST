C51 COMPILER V9.54   ____________                                                          05/07/2019 23:44:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ____________
OBJECT MODULE PLACED IN 遥控键码显示.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE 遥控键码显示.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXT
                    -END TABS(2)

line level    source

   1          
   2          /************************************************************************************
   3                            液晶显示遥控各按键的键码值   如“IR-CODE:8DH”即该键的键码为0x8D
   4          *************************************************************************************
   5          ************************************************************************************/
   6          /*预处理命令*/
   7          #include<reg52.h>    //包含单片机寄存器的头文件
   8          #include<intrins.h> //包含_nop_()函数定义的头文件
   9          #define uchar unsigned char
  10          #define uint  unsigned int
  11          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  12          
  13          sbit IRIN=P3^2;         //红外接收器数据线
  14          
  15          
  16          sbit LCD_RS =P2^6;
  17          sbit LCD_RW =P2^5;
  18          sbit LCD_EN =P2^7;
  19          
  20          
  21          uchar code  cdis1[ ] = {" Red Control "};
  22          uchar code  cdis2[ ] = {"  IR-CODE: --H  "};
  23          uchar IRCOM[7];
  24          /***************延时函数*****************************/
  25          void delay(unsigned char x)    //x*0.14MS
  26          {
  27   1        unsigned char i;
  28   1        while(x--)
  29   1        {
  30   2          for (i = 0; i<13; i++) {}
  31   2        }
  32   1      }
  33          
  34          void delay1(int ms)
  35          {
  36   1        unsigned char y;
  37   1        while(ms--)
  38   1        {
  39   2          for(y = 0; y<250; y++)
  40   2          {
  41   3            _nop_();
  42   3            _nop_();
  43   3            _nop_();
  44   3            _nop_();
  45   3          }
  46   2        }
  47   1      }
  48          /*******************************************************************/
  49          /*                                                                 */
  50          /*检查LCD忙状态                                                    */
  51          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
  52          /*                                                                 */
  53          /*******************************************************************/ 
  54          
C51 COMPILER V9.54   ____________                                                          05/07/2019 23:44:59 PAGE 2   

  55          bit lcd_busy()
  56          {                          
  57   1        bit result; 
  58   1        LCD_RS = 0;
  59   1        LCD_RW = 1;
  60   1        LCD_EN = 1;
  61   1        delayNOP();
  62   1        result = (bit)(P0&0x80);
  63   1        LCD_EN = 0;
  64   1        return(result); 
  65   1      }
  66          
  67          /*******************************************************************/
  68          /*                                                                 */
  69          /*写指令数据到LCD                                                  */
  70          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  71          /*                                                                 */
  72          /*******************************************************************/
  73          
  74          void lcd_wcmd(uchar cmd)
  75          
  76          {                          
  77   1        while(lcd_busy());
  78   1        LCD_RS = 0;
  79   1        LCD_RW = 0;
  80   1        LCD_EN = 0;
  81   1        _nop_();
  82   1        _nop_(); 
  83   1        P0 = cmd;
  84   1        delayNOP();
  85   1        LCD_EN = 1;
  86   1        delayNOP();
  87   1        LCD_EN = 0;  
  88   1      }
  89          
  90          /*******************************************************************/
  91          /*                                                                 */
  92          /*写显示数据到LCD                                                  */
  93          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
  94          /*                                                                 */
  95          /*******************************************************************/
  96          
  97          void lcd_wdat(uchar dat)
  98          {                          
  99   1        while(lcd_busy());
 100   1        LCD_RS = 1;
 101   1        LCD_RW = 0;
 102   1        LCD_EN = 0;
 103   1        P0 = dat;
 104   1        delayNOP();
 105   1        LCD_EN = 1;
 106   1        delayNOP();
 107   1        LCD_EN = 0; 
 108   1      }
 109          
 110          /*******************************************************************/
 111          /*                                                                 */
 112          /*  LCD初始化设定                                                  */
 113          /*                                                                 */
 114          /*******************************************************************/
 115          
 116          void lcd_init()
C51 COMPILER V9.54   ____________                                                          05/07/2019 23:44:59 PAGE 3   

 117          { 
 118   1        delay1(15);                   
 119   1        lcd_wcmd(0x38);      //16*2显示，5*7点阵，8位数据
 120   1        delay1(5);
 121   1        lcd_wcmd(0x38);         
 122   1        delay1(5);
 123   1        lcd_wcmd(0x38);         
 124   1        delay1(5);
 125   1        
 126   1        lcd_wcmd(0x0c);      //显示开，关光标
 127   1        delay1(5);
 128   1        lcd_wcmd(0x06);      //移动光标
 129   1        delay1(5);
 130   1        lcd_wcmd(0x01);      //清除LCD的显示内容
 131   1        delay1(5);
 132   1      }
 133          
 134          /*******************************************************************/
 135          /*                                                                 */
 136          /*  设定显示位置                                                   */
 137          /*                                                                 */
 138          /*******************************************************************/
 139          
 140          void lcd_pos(uchar pos)
 141          {                          
 142   1        lcd_wcmd(pos | 0x80);  //数据指针=80+地址变量
 143   1      }
 144          
 145          /*******************************************************************/
 146          void main()
 147          {
 148   1        uchar m;  
 149   1        IRIN=1;                    //I/O口初始化
 150   1        delay1(10);                 //延时
 151   1        lcd_init();                //初始化LCD
 152   1        lcd_pos(0);                //设置显示位置为第一行的第1个字符  
 153   1        m=0;
 154   1        while(cdis1[m] != '\0')
 155   1        {                         //显示字符
 156   2          lcd_wdat(cdis1[m]);
 157   2          m++;
 158   2        }
 159   1        
 160   1        lcd_pos(0x40);             //设置显示位置为第二行第1个字符
 161   1        m=0;
 162   1        while(cdis2[m] != '\0')
 163   1        {
 164   2          lcd_wdat(cdis2[m]);      //显示字符
 165   2          m++;
 166   2        }
 167   1          
 168   1        IE=0x81;                 //允许总中断中断,使能 INT0 外部中断
 169   1        TCON=0x01;               //触发方式为脉冲负边沿触发
 170   1        
 171   1        while(1);
 172   1      
 173   1      } 
 174          /**********************************************************/
 175          void IR_IN() interrupt 0 using 0
 176          {
 177   1        unsigned char j,k,N=0;
 178   1        EX0 = 0;   
C51 COMPILER V9.54   ____________                                                          05/07/2019 23:44:59 PAGE 4   

 179   1        delay(15);
 180   1        if (IRIN==1) 
 181   1        { 
 182   2          EX0 =1;
 183   2          return;
 184   2        } 
 185   1                   //确认IR信号出现
 186   1        while (!IRIN)            //等IR变为高电平，跳过9ms的前导低电平信号。
 187   1          delay(1);
 188   1        
 189   1        for (j=0;j<4;j++)         //收集四组数据
 190   1        { 
 191   2          for (k=0;k<8;k++)        //每组数据有8位
 192   2          {
 193   3            while (IRIN)            //等 IR 变为低电平，跳过4.5ms的前导高电平信号。
 194   3            {delay(1);}
 195   3            while (!IRIN)          //等 IR 变为高电平
 196   3              delay(1);
 197   3            while (IRIN)           //计算IR高电平时长
 198   3            {
 199   4              delay(1);
 200   4              N++;           
 201   4              if (N>=30)
 202   4              { 
 203   5                EX0=1;
 204   5                return;
 205   5              }                  //0.14ms计数过长自动离开。
 206   4            }                        //高电平计数完毕                
 207   3            IRCOM[j]=IRCOM[j] >> 1;     //数据最高位补“0”
 208   3            if(N>=8)
 209   3            {
 210   4              IRCOM[j] = IRCOM[j] | 0x80;     //数据最高位补“1”
 211   4            }  
 212   3            N=0;
 213   3          }
 214   2        }
 215   1        
 216   1        if(IRCOM[2]!=~IRCOM[3])
 217   1        { 
 218   2          EX0=1;
 219   2          return; 
 220   2        }
 221   1        
 222   1        IRCOM[5]=IRCOM[2] & 0x0F;     //取键码的低四位
 223   1        IRCOM[6]=IRCOM[2] >> 4;       //右移4次，高四位变为低四位
 224   1        
 225   1        if(IRCOM[5]>9)
 226   1        { 
 227   2          IRCOM[5]=IRCOM[5]+0x37;
 228   2        }
 229   1        else
 230   1        IRCOM[5]=IRCOM[5]+0x30;
 231   1        
 232   1        if(IRCOM[6]>9)
 233   1        { 
 234   2          IRCOM[6]=IRCOM[6]+0x37;
 235   2        }
 236   1        else
 237   1        IRCOM[6]=IRCOM[6]+0x30;
 238   1        
 239   1        lcd_pos(0x4b);             
 240   1        lcd_wdat(IRCOM[6]);        //第一位数显示 
C51 COMPILER V9.54   ____________                                                          05/07/2019 23:44:59 PAGE 5   

 241   1        lcd_pos(0x4c);             
 242   1        lcd_wdat(IRCOM[5]);        //第二位数显示 
 243   1        EX0 = 1; 
 244   1      }
 245          
 246          
 247          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    461    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
